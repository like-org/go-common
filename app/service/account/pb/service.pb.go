// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        v3.15.8
// source: service.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_service_proto protoreflect.FileDescriptor

var file_service_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0c, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x0c, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0xd1, 0x03, 0x0a, 0x07, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x52, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0e, 0x53, 0x65,
	0x6e, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x2e, 0x6c,
	0x69, 0x6b, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e,
	0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x5b, 0x0a, 0x10, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x42, 0x79, 0x4d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x21, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x42, 0x79, 0x4d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x42, 0x79, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x67,
	0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x79,
	0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x25, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x42, 0x79, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e,
	0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x79, 0x4d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x6d, 0x65, 0x62, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x2e, 0x6c, 0x69, 0x6b, 0x65,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x65,
	0x62, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x6c, 0x69, 0x6b,
	0x65, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d,
	0x65, 0x62, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x42, 0x05,
	0x5a, 0x03, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_service_proto_goTypes = []interface{}{
	(*CreateAccountReq)(nil),         // 0: like.account.CreateAccountReq
	(*SendVerifyCodeReq)(nil),        // 1: like.account.SendVerifyCodeReq
	(*RegisterByMobileReq)(nil),      // 2: like.account.RegisterByMobileReq
	(*CreateMemberByMobileReq)(nil),  // 3: like.account.CreateMemberByMobileReq
	(*GetMemeberByIdReq)(nil),        // 4: like.account.GetMemeberByIdReq
	(*CreateAccountResp)(nil),        // 5: like.account.CreateAccountResp
	(*SendVerifyCodeResp)(nil),       // 6: like.account.SendVerifyCodeResp
	(*RegisterByMobileResp)(nil),     // 7: like.account.RegisterByMobileResp
	(*CreateMemberByMobileResp)(nil), // 8: like.account.CreateMemberByMobileResp
	(*GetMemeberByIdResp)(nil),       // 9: like.account.GetMemeberByIdResp
}
var file_service_proto_depIdxs = []int32{
	0, // 0: like.account.Service.CreateAccount:input_type -> like.account.CreateAccountReq
	1, // 1: like.account.Service.SendVerifyCode:input_type -> like.account.SendVerifyCodeReq
	2, // 2: like.account.Service.RegisterByMobile:input_type -> like.account.RegisterByMobileReq
	3, // 3: like.account.Service.CreateMemberByMobile:input_type -> like.account.CreateMemberByMobileReq
	4, // 4: like.account.Service.GetMemeberById:input_type -> like.account.GetMemeberByIdReq
	5, // 5: like.account.Service.CreateAccount:output_type -> like.account.CreateAccountResp
	6, // 6: like.account.Service.SendVerifyCode:output_type -> like.account.SendVerifyCodeResp
	7, // 7: like.account.Service.RegisterByMobile:output_type -> like.account.RegisterByMobileResp
	8, // 8: like.account.Service.CreateMemberByMobile:output_type -> like.account.CreateMemberByMobileResp
	9, // 9: like.account.Service.GetMemeberById:output_type -> like.account.GetMemeberByIdResp
	5, // [5:10] is the sub-list for method output_type
	0, // [0:5] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_service_proto_init() }
func file_service_proto_init() {
	if File_service_proto != nil {
		return
	}
	file_member_proto_init()
	file_account_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_proto_goTypes,
		DependencyIndexes: file_service_proto_depIdxs,
	}.Build()
	File_service_proto = out.File
	file_service_proto_rawDesc = nil
	file_service_proto_goTypes = nil
	file_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ServiceClient is the client API for Service service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServiceClient interface {
	CreateAccount(ctx context.Context, in *CreateAccountReq, opts ...grpc.CallOption) (*CreateAccountResp, error)
	SendVerifyCode(ctx context.Context, in *SendVerifyCodeReq, opts ...grpc.CallOption) (*SendVerifyCodeResp, error)
	RegisterByMobile(ctx context.Context, in *RegisterByMobileReq, opts ...grpc.CallOption) (*RegisterByMobileResp, error)
	CreateMemberByMobile(ctx context.Context, in *CreateMemberByMobileReq, opts ...grpc.CallOption) (*CreateMemberByMobileResp, error)
	GetMemeberById(ctx context.Context, in *GetMemeberByIdReq, opts ...grpc.CallOption) (*GetMemeberByIdResp, error)
}

type serviceClient struct {
	cc grpc.ClientConnInterface
}

func NewServiceClient(cc grpc.ClientConnInterface) ServiceClient {
	return &serviceClient{cc}
}

func (c *serviceClient) CreateAccount(ctx context.Context, in *CreateAccountReq, opts ...grpc.CallOption) (*CreateAccountResp, error) {
	out := new(CreateAccountResp)
	err := c.cc.Invoke(ctx, "/like.account.Service/CreateAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) SendVerifyCode(ctx context.Context, in *SendVerifyCodeReq, opts ...grpc.CallOption) (*SendVerifyCodeResp, error) {
	out := new(SendVerifyCodeResp)
	err := c.cc.Invoke(ctx, "/like.account.Service/SendVerifyCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) RegisterByMobile(ctx context.Context, in *RegisterByMobileReq, opts ...grpc.CallOption) (*RegisterByMobileResp, error) {
	out := new(RegisterByMobileResp)
	err := c.cc.Invoke(ctx, "/like.account.Service/RegisterByMobile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) CreateMemberByMobile(ctx context.Context, in *CreateMemberByMobileReq, opts ...grpc.CallOption) (*CreateMemberByMobileResp, error) {
	out := new(CreateMemberByMobileResp)
	err := c.cc.Invoke(ctx, "/like.account.Service/CreateMemberByMobile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) GetMemeberById(ctx context.Context, in *GetMemeberByIdReq, opts ...grpc.CallOption) (*GetMemeberByIdResp, error) {
	out := new(GetMemeberByIdResp)
	err := c.cc.Invoke(ctx, "/like.account.Service/GetMemeberById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServiceServer is the server API for Service service.
type ServiceServer interface {
	CreateAccount(context.Context, *CreateAccountReq) (*CreateAccountResp, error)
	SendVerifyCode(context.Context, *SendVerifyCodeReq) (*SendVerifyCodeResp, error)
	RegisterByMobile(context.Context, *RegisterByMobileReq) (*RegisterByMobileResp, error)
	CreateMemberByMobile(context.Context, *CreateMemberByMobileReq) (*CreateMemberByMobileResp, error)
	GetMemeberById(context.Context, *GetMemeberByIdReq) (*GetMemeberByIdResp, error)
}

// UnimplementedServiceServer can be embedded to have forward compatible implementations.
type UnimplementedServiceServer struct {
}

func (*UnimplementedServiceServer) CreateAccount(context.Context, *CreateAccountReq) (*CreateAccountResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAccount not implemented")
}
func (*UnimplementedServiceServer) SendVerifyCode(context.Context, *SendVerifyCodeReq) (*SendVerifyCodeResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendVerifyCode not implemented")
}
func (*UnimplementedServiceServer) RegisterByMobile(context.Context, *RegisterByMobileReq) (*RegisterByMobileResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterByMobile not implemented")
}
func (*UnimplementedServiceServer) CreateMemberByMobile(context.Context, *CreateMemberByMobileReq) (*CreateMemberByMobileResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMemberByMobile not implemented")
}
func (*UnimplementedServiceServer) GetMemeberById(context.Context, *GetMemeberByIdReq) (*GetMemeberByIdResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMemeberById not implemented")
}

func RegisterServiceServer(s *grpc.Server, srv ServiceServer) {
	s.RegisterService(&_Service_serviceDesc, srv)
}

func _Service_CreateAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAccountReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).CreateAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/like.account.Service/CreateAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).CreateAccount(ctx, req.(*CreateAccountReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Service_SendVerifyCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendVerifyCodeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).SendVerifyCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/like.account.Service/SendVerifyCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).SendVerifyCode(ctx, req.(*SendVerifyCodeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Service_RegisterByMobile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterByMobileReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).RegisterByMobile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/like.account.Service/RegisterByMobile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).RegisterByMobile(ctx, req.(*RegisterByMobileReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Service_CreateMemberByMobile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMemberByMobileReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).CreateMemberByMobile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/like.account.Service/CreateMemberByMobile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).CreateMemberByMobile(ctx, req.(*CreateMemberByMobileReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Service_GetMemeberById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMemeberByIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).GetMemeberById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/like.account.Service/GetMemeberById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).GetMemeberById(ctx, req.(*GetMemeberByIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Service_serviceDesc = grpc.ServiceDesc{
	ServiceName: "like.account.Service",
	HandlerType: (*ServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAccount",
			Handler:    _Service_CreateAccount_Handler,
		},
		{
			MethodName: "SendVerifyCode",
			Handler:    _Service_SendVerifyCode_Handler,
		},
		{
			MethodName: "RegisterByMobile",
			Handler:    _Service_RegisterByMobile_Handler,
		},
		{
			MethodName: "CreateMemberByMobile",
			Handler:    _Service_CreateMemberByMobile_Handler,
		},
		{
			MethodName: "GetMemeberById",
			Handler:    _Service_GetMemeberById_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
